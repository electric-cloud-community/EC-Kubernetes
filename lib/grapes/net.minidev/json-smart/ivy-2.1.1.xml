<?xml version="1.0" encoding="UTF-8"?>
<ivy-module version="2.0" xmlns:m="http://ant.apache.org/ivy/maven">
	<info organisation="net.minidev"
		module="json-smart"
		revision="2.1.1"
		status="release"
		publication="20141212060900"
	>
		<description homepage="">
		JSON (JavaScript Object Notation) is a lightweight data-interchange format.
    It is easy for humans to read and write. It is easy for machines to parse and generate.
    It is based on a subset of the JavaScript Programming Language, Standard ECMA-262 3rd Edition
    - December 1999. JSON is a text format that is completely language independent but uses
    conventions that are familiar to programmers of the C-family of languages, including C, C++, C#,
    Java, JavaScript, Perl, Python, and many others.
    These properties make JSON an ideal data-interchange language.
		</description>
		<m:properties__maven.compiler.target>1.5</m:properties__maven.compiler.target>
		<m:properties__maven.compiler.source>1.5</m:properties__maven.compiler.source>
		<m:properties__project.build.sourceEncoding>UTF-8</m:properties__project.build.sourceEncoding>
		<m:properties__sonatypeOssDistMgmtSnapshotsUrl>https://oss.sonatype.org/content/repositories/snapshots/</m:properties__sonatypeOssDistMgmtSnapshotsUrl>
		<m:maven.plugins>org.apache.maven.plugins__maven-enforcer-plugin__1.0|org.apache.maven.plugins__maven-enforcer-plugin__1.0|org.apache.maven.plugins__maven-source-plugin__2.1.2|org.apache.maven.plugins__maven-compiler-plugin__2.3.2|org.apache.maven.plugins__maven-resources-plugin__2.5|org.apache.maven.plugins__maven-jar-plugin__2.3.1|org.apache.maven.plugins__maven-javadoc-plugin__2.8|org.apache.maven.plugins__maven-enforcer-plugin__1.0|org.apache.maven.plugins__maven-enforcer-plugin__1.0|org.apache.maven.plugins__maven-source-plugin__2.1.2|org.apache.maven.plugins__maven-compiler-plugin__2.3.2|org.apache.maven.plugins__maven-resources-plugin__2.5|org.apache.maven.plugins__maven-jar-plugin__2.3.1|org.apache.maven.plugins__maven-javadoc-plugin__2.8|org.apache.felix__maven-bundle-plugin__2.3.7</m:maven.plugins>
		<m:dependency.management__net.minidev__json-smart__version>2.1.1</m:dependency.management__net.minidev__json-smart__version>
		<m:dependency.management__net.minidev__asm__version>1.0.2</m:dependency.management__net.minidev__asm__version>
		<m:dependency.management__net.minidev__json-smart-mini__version>2.1.1</m:dependency.management__net.minidev__json-smart-mini__version>
		<m:dependency.management__junit__junit__version>3.8.2</m:dependency.management__junit__junit__version>
	</info>
	<configurations>
		<conf name="default" visibility="public" description="runtime dependencies and master artifact can be used with this conf" extends="runtime,master"/>
		<conf name="master" visibility="public" description="contains only the artifact published by this module itself, with no transitive dependencies"/>
		<conf name="compile" visibility="public" description="this is the default scope, used if none is specified. Compile dependencies are available in all classpaths."/>
		<conf name="provided" visibility="public" description="this is much like compile, but indicates you expect the JDK or a container to provide it. It is only available on the compilation classpath, and is not transitive."/>
		<conf name="runtime" visibility="public" description="this scope indicates that the dependency is not required for compilation, but is for execution. It is in the runtime and test classpaths, but not the compile classpath." extends="compile"/>
		<conf name="test" visibility="private" description="this scope indicates that the dependency is not required for normal use of the application, and is only available for the test compilation and execution phases." extends="runtime"/>
		<conf name="system" visibility="public" description="this scope is similar to provided except that you have to provide the JAR which contains it explicitly. The artifact is always available and is not looked up in a repository."/>
		<conf name="sources" visibility="public" description="this configuration contains the source artifact of this module, if any."/>
		<conf name="javadoc" visibility="public" description="this configuration contains the javadoc artifact of this module, if any."/>
		<conf name="optional" visibility="public" description="contains all optional dependencies"/>
	</configurations>
	<publications>
		<artifact name="json-smart" type="bundle" ext="jar" conf="master"/>
		<artifact name="json-smart" type="source" ext="jar" conf="sources" m:classifier="sources"/>
	</publications>
	<dependencies>
		<dependency org="junit" name="junit" rev="3.8.2" force="true" conf="test->runtime(*),master(*)"/>
		<dependency org="net.minidev" name="asm" rev="1.0.2" force="true" conf="compile->compile(*),master(*);runtime->runtime(*)"/>
		<override org="net.minidev" module="json-smart-mini" matcher="exact" rev="2.1.1"/>
		<override org="net.minidev" module="json-smart" matcher="exact" rev="2.1.1"/>
		<override org="junit" module="junit" matcher="exact" rev="3.8.2"/>
		<override org="net.minidev" module="asm" matcher="exact" rev="1.0.2"/>
	</dependencies>
</ivy-module>
